<?xml version="1.0" ?>
<launch>    
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->   
    <arg name="paused" default="true"/>   
    <arg name="use_sim_time" default="true"/>   
    <arg name="gui" default="true"/>   
    <arg name="headless" default="false"/>   
    <arg name="debug" default="false"/>
    <arg name="world_name" default="$(find lynxmotion_al5d_description)/worlds/al5d.world" />
    <arg name="server_required" default="true" />
    <arg name="gui_required" default="true" />
    

    
    <!-- We resume the logic in empty_world.launch -->   
    <include file="$(find gazebo_ros)/launch/empty_world.launch">     
        <arg name="paused" value="$(arg paused)" /> 
        <arg name="world_name" default="$(arg world_name)" />
        <arg name="server_required" default="$(arg server_required)" />
        <arg name="gui_required" default="$(arg server_required)" />
    </include>    

    <!-- Load the URDF into the ROS Parameter Server -->   
    <!--<param name="robot_description" command="$(find xacro)/xacro \-\-inorder  
        '$(find lynxmotion_al5d_description)/urdf/lynxmotion_al5d.xacro'" /> -->   

    <!-- Continues the logic in upload.launch-->  
    <include file="$(find lynxmotion_al5d_description)/launch/upload.launch" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->   
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" output="screen" 
            args="-param robot_description -urdf -model lynxmotion_al5d 
                    -J lynxmotion_al5d::Joint1 0 -J lynxmotion_al5d::Joint2 1.57 
                    -J lynxmotion_al5d::Joint3 -1.57 lynxmotion_al5d::Joint4 0 
                    -J lynxmotion_al5d::Joint5 0 -J lynxmotion_al5d::Gripper 0.03175  
                    -unpause"/>  

    <node name="sim_manager" pkg="lynxmotion_al5d_tutorials" type="manager_node" />
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find lynxmotion_al5d_description)/config/robot_control.yaml" />

    <!-- Load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/lynxmotion_al5d" args="joints_positions" />

    <!-- Convert joint states to TF transforms for Rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <remap from="/joint_states" to="/lynxmotion_al5d/joint_states" />
    </node>

</launch> 